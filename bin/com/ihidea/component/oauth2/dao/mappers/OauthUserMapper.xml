<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ihidea.component.oauth2.dao.OauthUserMapper" >
  <resultMap id="BaseResultMap" type="com.ihidea.component.oauth2.dao.model.OauthUser" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="OPEN_ID" property="openId" jdbcType="VARCHAR" />
    <result column="LOGIN_NAME" property="loginName" jdbcType="VARCHAR" />
    <result column="LOGIN_PASSWORD" property="loginPassword" jdbcType="VARCHAR" />
    <result column="PASSWORD_SALT" property="passwordSalt" jdbcType="VARCHAR" />
    <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
    <result column="NICKNAME" property="nickname" jdbcType="VARCHAR" />
    <result column="PHONE" property="phone" jdbcType="VARCHAR" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="POSITION" property="position" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="DECIMAL" />
    <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP" />
    <result column="CREATE_ACCOUNT" property="createAccount" jdbcType="VARCHAR" />
    <result column="MODIFY_DATE" property="modifyDate" jdbcType="TIMESTAMP" />
    <result column="MODIFY_ACCOUNT" property="modifyAccount" jdbcType="VARCHAR" />
    <result column="QQ" property="qq" jdbcType="VARCHAR" />
    <result column="BIRTHDAY" property="birthday" jdbcType="VARCHAR" />
    <result column="ADDRESS" property="address" jdbcType="VARCHAR" />
    <result column="COMPANY" property="company" jdbcType="VARCHAR" />
    <result column="APP_KEY" property="appKey" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, OPEN_ID, LOGIN_NAME, LOGIN_PASSWORD, PASSWORD_SALT, USER_NAME, NICKNAME, PHONE, 
    EMAIL, POSITION, STATUS, CREATE_DATE, CREATE_ACCOUNT, MODIFY_DATE, MODIFY_ACCOUNT, 
    QQ, BIRTHDAY, ADDRESS, COMPANY, APP_KEY
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ihidea.component.oauth2.dao.model.OauthUserCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from OAUTH_USER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from OAUTH_USER
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from OAUTH_USER
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ihidea.component.oauth2.dao.model.OauthUserCriteria" >
    delete from OAUTH_USER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ihidea.component.oauth2.dao.model.OauthUser" >
    insert into OAUTH_USER (ID, OPEN_ID, LOGIN_NAME, 
      LOGIN_PASSWORD, PASSWORD_SALT, USER_NAME, 
      NICKNAME, PHONE, EMAIL, 
      POSITION, STATUS, CREATE_DATE, 
      CREATE_ACCOUNT, MODIFY_DATE, MODIFY_ACCOUNT, 
      QQ, BIRTHDAY, ADDRESS, 
      COMPANY, APP_KEY)
    values (#{id,jdbcType=VARCHAR}, #{openId,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, 
      #{loginPassword,jdbcType=VARCHAR}, #{passwordSalt,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{position,jdbcType=VARCHAR}, #{status,jdbcType=DECIMAL}, #{createDate,jdbcType=TIMESTAMP}, 
      #{createAccount,jdbcType=VARCHAR}, #{modifyDate,jdbcType=TIMESTAMP}, #{modifyAccount,jdbcType=VARCHAR}, 
      #{qq,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{company,jdbcType=VARCHAR}, #{appKey,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ihidea.component.oauth2.dao.model.OauthUser" >
    insert into OAUTH_USER
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="openId != null" >
        OPEN_ID,
      </if>
      <if test="loginName != null" >
        LOGIN_NAME,
      </if>
      <if test="loginPassword != null" >
        LOGIN_PASSWORD,
      </if>
      <if test="passwordSalt != null" >
        PASSWORD_SALT,
      </if>
      <if test="userName != null" >
        USER_NAME,
      </if>
      <if test="nickname != null" >
        NICKNAME,
      </if>
      <if test="phone != null" >
        PHONE,
      </if>
      <if test="email != null" >
        EMAIL,
      </if>
      <if test="position != null" >
        POSITION,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="createDate != null" >
        CREATE_DATE,
      </if>
      <if test="createAccount != null" >
        CREATE_ACCOUNT,
      </if>
      <if test="modifyDate != null" >
        MODIFY_DATE,
      </if>
      <if test="modifyAccount != null" >
        MODIFY_ACCOUNT,
      </if>
      <if test="qq != null" >
        QQ,
      </if>
      <if test="birthday != null" >
        BIRTHDAY,
      </if>
      <if test="address != null" >
        ADDRESS,
      </if>
      <if test="company != null" >
        COMPANY,
      </if>
      <if test="appKey != null" >
        APP_KEY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="openId != null" >
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null" >
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPassword != null" >
        #{loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="passwordSalt != null" >
        #{passwordSalt,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="position != null" >
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=DECIMAL},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createAccount != null" >
        #{createAccount,jdbcType=VARCHAR},
      </if>
      <if test="modifyDate != null" >
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyAccount != null" >
        #{modifyAccount,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="company != null" >
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="appKey != null" >
        #{appKey,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ihidea.component.oauth2.dao.model.OauthUserCriteria" resultType="java.lang.Integer" >
    select count(*) from OAUTH_USER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update OAUTH_USER
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.openId != null" >
        OPEN_ID = #{record.openId,jdbcType=VARCHAR},
      </if>
      <if test="record.loginName != null" >
        LOGIN_NAME = #{record.loginName,jdbcType=VARCHAR},
      </if>
      <if test="record.loginPassword != null" >
        LOGIN_PASSWORD = #{record.loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.passwordSalt != null" >
        PASSWORD_SALT = #{record.passwordSalt,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null" >
        USER_NAME = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null" >
        NICKNAME = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.position != null" >
        POSITION = #{record.position,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=DECIMAL},
      </if>
      <if test="record.createDate != null" >
        CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createAccount != null" >
        CREATE_ACCOUNT = #{record.createAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyDate != null" >
        MODIFY_DATE = #{record.modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyAccount != null" >
        MODIFY_ACCOUNT = #{record.modifyAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null" >
        QQ = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null" >
        BIRTHDAY = #{record.birthday,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.company != null" >
        COMPANY = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.appKey != null" >
        APP_KEY = #{record.appKey,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update OAUTH_USER
    set ID = #{record.id,jdbcType=VARCHAR},
      OPEN_ID = #{record.openId,jdbcType=VARCHAR},
      LOGIN_NAME = #{record.loginName,jdbcType=VARCHAR},
      LOGIN_PASSWORD = #{record.loginPassword,jdbcType=VARCHAR},
      PASSWORD_SALT = #{record.passwordSalt,jdbcType=VARCHAR},
      USER_NAME = #{record.userName,jdbcType=VARCHAR},
      NICKNAME = #{record.nickname,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      POSITION = #{record.position,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=DECIMAL},
      CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      CREATE_ACCOUNT = #{record.createAccount,jdbcType=VARCHAR},
      MODIFY_DATE = #{record.modifyDate,jdbcType=TIMESTAMP},
      MODIFY_ACCOUNT = #{record.modifyAccount,jdbcType=VARCHAR},
      QQ = #{record.qq,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      COMPANY = #{record.company,jdbcType=VARCHAR},
      APP_KEY = #{record.appKey,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ihidea.component.oauth2.dao.model.OauthUser" >
    update OAUTH_USER
    <set >
      <if test="openId != null" >
        OPEN_ID = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null" >
        LOGIN_NAME = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPassword != null" >
        LOGIN_PASSWORD = #{loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="passwordSalt != null" >
        PASSWORD_SALT = #{passwordSalt,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        NICKNAME = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="position != null" >
        POSITION = #{position,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=DECIMAL},
      </if>
      <if test="createDate != null" >
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createAccount != null" >
        CREATE_ACCOUNT = #{createAccount,jdbcType=VARCHAR},
      </if>
      <if test="modifyDate != null" >
        MODIFY_DATE = #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyAccount != null" >
        MODIFY_ACCOUNT = #{modifyAccount,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        QQ = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        BIRTHDAY = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        ADDRESS = #{address,jdbcType=VARCHAR},
      </if>
      <if test="company != null" >
        COMPANY = #{company,jdbcType=VARCHAR},
      </if>
      <if test="appKey != null" >
        APP_KEY = #{appKey,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ihidea.component.oauth2.dao.model.OauthUser" >
    update OAUTH_USER
    set OPEN_ID = #{openId,jdbcType=VARCHAR},
      LOGIN_NAME = #{loginName,jdbcType=VARCHAR},
      LOGIN_PASSWORD = #{loginPassword,jdbcType=VARCHAR},
      PASSWORD_SALT = #{passwordSalt,jdbcType=VARCHAR},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      NICKNAME = #{nickname,jdbcType=VARCHAR},
      PHONE = #{phone,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      POSITION = #{position,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=DECIMAL},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      CREATE_ACCOUNT = #{createAccount,jdbcType=VARCHAR},
      MODIFY_DATE = #{modifyDate,jdbcType=TIMESTAMP},
      MODIFY_ACCOUNT = #{modifyAccount,jdbcType=VARCHAR},
      QQ = #{qq,jdbcType=VARCHAR},
      BIRTHDAY = #{birthday,jdbcType=VARCHAR},
      ADDRESS = #{address,jdbcType=VARCHAR},
      COMPANY = #{company,jdbcType=VARCHAR},
      APP_KEY = #{appKey,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>